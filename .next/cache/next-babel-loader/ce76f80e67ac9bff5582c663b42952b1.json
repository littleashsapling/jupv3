{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { tap, map, catchError, filter } from \"rxjs/operators\";\n\nconst {\n  kernels\n} = require(\"rx-jupyter\");\n\nconst {\n  Provider,\n  Consumer\n} = /*#__PURE__*/React.createContext();\nexport { Consumer };\nexport default class Kernel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  getKernel() {\n    console.log(\"getting kernel\");\n\n    if (this.props.host) {\n      const host = this.props.host;\n      kernels.start(host, \"python\", \"/\").subscribe(xhr => {\n        this.setState(_objectSpread(_objectSpread({}, xhr.response), {}, {\n          channels: kernels.connect(host, xhr.response.id),\n          last_activity: new Date(xhr.response.last_activity)\n        }));\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.host !== this.props.host) {\n      this.getKernel();\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.host) {\n      this.getKernel();\n    }\n  }\n\n  render() {\n    console.log(this.state);\n\n    if (!this.props.children || !this.state || !this.state.channels) {\n      return null;\n    }\n\n    return /*#__PURE__*/_jsx(Provider, {\n      value: this.state,\n      children: this.props.children\n    });\n  }\n\n}\n\n_defineProperty(Kernel, \"defaultProps\", {\n  kernelName: \"python\"\n});","map":null,"metadata":{},"sourceType":"module"}