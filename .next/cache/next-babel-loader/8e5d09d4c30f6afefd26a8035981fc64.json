{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as React from \"react\";\nimport { first, map, mapTo, filter, tap } from \"rxjs/operators\";\n\nvar _ = require(\"lodash\");\n\nvar messaging = require(\"@nteract/messaging\");\n\nfunction sleep(duration) {\n  return new Promise(resolve => setTimeout(resolve, duration));\n}\n\nexport class RunKernel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      source: \"print('hey')\",\n      messageCollections: {}\n    };\n  }\n\n  async getKernelInfo() {\n    // ready reciver\n    let kernelInfo = null;\n    this.props.kernel.channels.pipe(messaging.ofMessageType(\"kernel_info_reply\"), first(), map(msg => msg.content)).subscribe(content => {\n      kernelInfo = content;\n    }); // get kernel info\n\n    while (!kernelInfo) {\n      // send message\n      this.props.kernel.channels.next(messaging.kernelInfoRequest());\n      await sleep(60);\n    }\n  }\n\n  componentDidMount() {\n    this.subscription = this.props.kernel.channels.subscribe(msg => {\n      if (msg.parent_header && typeof msg.parent_header.msg_id === \"string\") {\n        const parent_id = msg.parent_header.msg_id; // collect messages\n\n        const messages = _.get(this.state.messageCollections, parent_id, []);\n\n        messages.push(msg);\n        this.setState({\n          messageCollections: _objectSpread(_objectSpread({}, this.state.messageCollections), {}, {\n            [parent_id]: messages\n          })\n        });\n      }\n    }, err => console.error(err));\n    this.getKernelInfo();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsx(\"textarea\", {\n        style: {\n          width: \"300px\",\n          height: \"300px\"\n        },\n        onChange: event => {\n          this.setState({\n            source: event.target.value\n          });\n        },\n        children: this.state.source\n      }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsx(\"button\", {\n        onClick: () => {\n          console.log(this.state.source);\n          this.props.kernel.channels.next(messaging.executeRequest(this.state.source));\n        },\n        children: \"Send message\"\n      }), _.map(this.state.messageCollections, (collection, parent_id) => {\n        return _.map(collection, msg => {\n          console.log(msg);\n\n          switch (msg.msg_type) {\n            case \"execute_result\":\n            case \"display_data\":\n              return /*#__PURE__*/_jsx(\"pre\", {\n                children: msg.content.data[\"text/plain\"]\n              }, msg.header.msg_id);\n\n            case \"stream\":\n              return /*#__PURE__*/_jsx(\"pre\", {\n                children: msg.content.text\n              }, msg.header.msg_id);\n\n            default:\n              return null;\n          }\n        });\n      })]\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}